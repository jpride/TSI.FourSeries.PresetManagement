/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:
System Name:
System Number:
Programmer:		Jeff Pride
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
#SYMBOL_NAME "TSI - Preset Load Manager - 3 Series"
#CATEGORY "46" "#TSI Modules" 

#DEFAULT_NONVOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
#output_shift 1

#DEFINE_CONSTANT MAX_PRESETS 100
#DEFINE_CONSTANT MAX_NAME_SIZE 16
#DEFINE_CONSTANT MAX_NUMBER_SIZE 6

#DEFINE_CONSTANT BAND0 "internal"
#DEFINE_CONSTANT BAND1 "broadcast"
#DEFINE_CONSTANT BAND2 "cable"



/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

/*********************************  Include Libraries  *************************************/
#USER_SIMPLSHARP_LIBRARY "TSI.PresetManagement"


/**********************************	I/O		************************************************/
digital_input   _skip_,
				read;

string_output   PresetName[MAX_PRESETS],
				_skip_,
                PresetNumber[MAX_PRESETS];

analog_output 	_skip_,
				PresetBand[MAX_PRESETS];

string_parameter filepath[128];

#begin_parameter_properties filepath
	propValidUnits = unitString;
	propDefaultUnit = unitString;
	propDefaultValue = "/User/files/presets/presets.json";
	propShortDescription = "location and name of file to read";
#end_parameter_properties


//Global Vars
string 		strNames[MAX_PRESETS][MAX_NAME_SIZE],
			strNumbers[MAX_PRESETS][MAX_NUMBER_SIZE],
		 	strBands[MAX_PRESETS][MAX_NAME_SIZE];



//CSharp Class Instance
PresetManagement pm;

//Event Registration
function RegisterEventHandlers()
{
	RegisterEvent(pm, PresetListLoadedEventToCall, OnPresetLoadedEvent);	
}


threadsafe push read 
{
  pm.Initialize();
}


eventhandler OnPresetLoadedEvent(PresetManagement sender, PresetListLoadedEventArgs args)
{ 
	try
	{          
		strNames[args.presetindex] = args.presetname;
		strNumbers[args.presetindex] = args.presetnumber;
		strBands[args.presetindex] = args.presetband;

		PresetName[args.presetindex] = strNames[args.presetindex];
		PresetNumber[args.presetindex] = strNumbers[args.presetindex];

		//the 'band' is specific to STC EOC systems, it can be ignored, 
		//but the json structure must contain the 'band' field, the value can be null
		if (strBands[args.presetindex] = BAND0)
		{
			PresetBand[args.presetindex] = 0;
		}
		else if (strBands[args.presetindex] = BAND1)
		{
			PresetBand[args.presetindex] = 1;
		}
		else if (strBands[args.presetindex] = BAND2)
		{
			PresetBand[args.presetindex] = 2;
		}
		
		
	}
	catch	
	{
    	trace("Deserialization Event Exception thrown: %s",GetExceptionMessage());
	}

} 


/*******************************************************************************************
  Main()
*******************************************************************************************/

Function Main()
{    
	RegisterEventHandlers();
    WaitForInitializationComplete();

	pm.fileLocation = filepath;
}


